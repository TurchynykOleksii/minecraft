.learning-happens {
  padding: 33px 0;
}

.learning-happens__blure {
  margin-bottom: 86px;
}

.learning-happens__headline {
  margin-top: 0;
  font-size: 20px;
  font-family: var(--font-bold);

  @include mq(tablet) {
    margin-bottom: 30px;
    font-size: 24px;
    text-align: center;
  }
}

.learning-happens__list {
  display: flex;
  flex-direction: column;
  gap: 19px;

  @include mq(tablet) {
    display: grid;
    grid-template-columns: repeat(2, auto);
    grid-template-rows: repeat(3, auto);
    grid-column-gap: 27px;
    grid-row-gap: 28px;
  }

  @include mq(desktop) {
    grid-template-columns: repeat(3, auto);
    grid-template-rows: repeat(2, auto);
    grid-column-gap: 36px;
    grid-row-gap: 45px;
  }
}

.learning-happens__item {
  display: flex;
  align-items: center;
  gap: 14px;



  $backgrounds: (url('../images/learning-happens/learning-happens-1.png') no-repeat center, radial-gradient(50% 50% at 50% 50%, #FFFFFF 0%, #FFE7A7 100%)),
  (url('../images/learning-happens/learning-happens-2.png') no-repeat center, radial-gradient(50% 50% at 50% 50%, #FFFFFF 32.29%, #CADCF4 100%)),
  (url('../images/learning-happens/learning-happens-3.png') no-repeat center, radial-gradient(50% 50% at 50% 50%, #FFFFFF 34.99%, #FFE1FD 100%)),
  (url('../images/learning-happens/learning-happens-4.png') no-repeat center, radial-gradient(50% 50% at 50% 50%, rgba(255, 255, 255, 0) 0%, #DED9FF 100%)),
  (url('../images/learning-happens/learning-happens-5.png') no-repeat center, radial-gradient(50% 50% at 50% 50%, #FFFFFF 37.79%, #FFE0CE 86.98%)),
  (url('../images/learning-happens/learning-happens-6.png') no-repeat center, radial-gradient(50% 50% at 50% 50%, #FFFFFF 26.75%, #CCF1A6 100%));

  @for $i from 1 through length($backgrounds) {
    &:nth-child(#{length($backgrounds)}n+#{$i}):before {
      background: nth($backgrounds, $i);
      background-size: 65%, 100%;
    }
  }

  $grids: "1 / 1 / 2 / 2",
    "2 / 1 / 2 / 3",
    "3 / 1 / 3 / 2",
    "1 / 2 / 2 / 3",
    "1/ 2 / 4 / 2",
    "3 / 2 / 4 / 3";

  @for $i from 1 through length($grids) {
    &:nth-child(#{length($grids)}n+#{$i}) {
      grid-area: #{nth($grids, $i)};
    }
  }

  @include mq(desktop) {
    $grids: "1 / 1 / 2 / 2",
    "2 / 1 / 2 / 3",
    "1 / 2 / 2 / 2",
    "2 / 2 / 3 / 3",
    "1 / 3 / 2 / 3",
    "2 / 3 / 3 / 3";

    @for $i from 1 through length($grids) {
      &:nth-child(#{length($grids)}n+#{$i}) {
        grid-area: #{nth($grids, $i)};

      }
    }
  }

  &:before {
    content: '';
    display: flex;
    flex-shrink: 0;
    width: 68px;
    height: 68px;
    border-radius: var(--radius-12);

    @include mq(tablet) {
      width: 96px;
      height: 96px;

    }

    @include mq(desktop) {
      width: 115px;
      height: 115px;

    }
  }

  @include mq(tablet) {
    margin-bottom: 27px;
    max-width: 315px;
    width: 100%;

    strong {
      display: block;
      font-size: 16px;
    }

    p {
      font-size: 14px;
    }
  }

  @include mq(desktop) {
    max-width: 400px;

    strong {
      font-size: 20px;
    }

    p {
      font-size: 16px;
    }
  }
}